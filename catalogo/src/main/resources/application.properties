spring.application.name=catalogo
spring.datasource.url=jdbc:oracle:thin:@//localhost:1521/orcl
spring.datasource.username=ADMINSAMA
spring.datasource.password=555
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.jpa.database-platform=org.hibernate.dialect.OracleDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Nivel de log predeterminado
logging.level.root=INFO
# Nivel de log para tu paquete específico (por ejemplo, tu paquete principal)
logging.level.com.demo.catalogo=DEBUG
# Formato del log
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
# Archivo de salida del log
logging.file.name=logs/application.log
# Tamaño máximo del archivo de log y cantidad de archivos antiguos
logging.file.max-size=10MB
logging.file.max-history=7

# Habilitar la documentación de Swagger
#Permite que se genere la documentación de la API en formato OpenAPI.
springdoc.api-docs.enabled=true
# Habilita la interfaz gráfica de Swagger UI.
springdoc.swagger-ui.enabled=true
#Especifica la ruta donde se puede acceder a Swagger UI.
springdoc.swagger-ui.path=/swagger-ui.html
#Especifica la ruta donde se generarán los documentos OpenAPI (por ejemplo, en formato JSON).
springdoc.api-docs.path=/v3/api-docs


# Expone todos los endpoints de Actuator a través de la web
management.endpoints.web.exposure.include=*
# Muestra siempre los detalles completos en el endpoint de salud (/actuator/health)
management.endpoint.health.show-details=always
# Habilita la exportación de métricas en formato Prometheus
management.metrics.export.prometheus.enabled=true

# URL que se almacenará en el código QR (puede ser una imagen, video, etc.)
app.qr.url=https://imgur.com/a/EXVzUEK

# Datos del usuario que se incluirán en el QR
app.user.name=Carlos Sanchez Barron
app.user.email=e-cbarron@neoris.com
app.user.organization=Neoris

# ==========================
# 📧 CONFIGURACIÓN DE SMTP PARA OUTLOOK
# ==========================
# Configuración del servidor SMTP para el envío de correos a través de Gmail
# Dirección del servidor SMTP de Gmail (para enviar correos)
spring.mail.host=smtp.gmail.com
# Puerto de conexión. 587 es el puerto estándar para STARTTLS en Gmail
spring.mail.port=587
spring.mail.username=carlos.sb1708@gmail.com
spring.mail.password=qhwf vyhi udro huvg

# Configuración para habilitar la seguridad TLS (STARTTLS) en la comunicación con el servidor SMTP
# Activa la seguridad STARTTLS para encriptar los correos
spring.mail.properties.mail.smtp.starttls.enable=true
# Habilita la autenticación SMTP, necesaria para enviar correos a través de Gmail
spring.mail.properties.mail.smtp.auth=true

# Personalización del nombre del remitente, puedes configurarlo si es necesario
spring.mail.properties.mail.smtp.from=carlos Neos

# Configuración para el destinatario del correo
# Agregar varios destinatarios separados por comas
mail.to=sasori.a1708@gmail.com,e-cbarron@neoris.com






